[{"C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\index.js":"1","C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\App.js":"2","C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\Tarjeta.js":"3"},{"size":413,"mtime":1608423298272,"results":"4","hashOfConfig":"5"},{"size":901,"mtime":1608503805315,"results":"6","hashOfConfig":"5"},{"size":2389,"mtime":1608495782300,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"xljcyp",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\index.js",[],["16","17"],"C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\App.js",["18"],"C:\\Users\\ILBAR\\Desktop\\curso_web\\React\\react-desde-cero\\src\\Tarjeta.js",["19"],"import './Tarjeta.css' //importamos el estilo que le vamos a dar a la tarjeta//\r\nimport PropTypes from'prop-types' //importamos la libreria que instalamos \r\nconst usuario ={nombre:\"Ilbar\",apellido:\"Garcia\",edad:30} //creamos un objeto usuario\r\nconst edadUsuario= edad => edad>33 //esta funcion recibe como parametro un numero , si este numero es mayor a 33 devuelve un true, sino un false\r\n \r\n\r\n\r\nconst Curso =({apellido,nombre})=> /*recibimos las propiedades y las desestructuramos para solo recibir apellido y nombre */\r\n ( //creamos un componente que devuelve un elemento que nos permite crear una tarjeta  \r\n    <div className=\"card-container\">\r\n      <div className=\"header\">\r\n        <a href=\"\">\r\n          <img src='https://lh3.googleusercontent.com/proxy/5OGshVCrnpBE37pP08458Tdjynee-qwT1CZXQzw9AaWCpTZzsLa55UBfXGri8nxbMKRn2K7r6zMvlxCVbomUqqR_WSGU6L0hbUf4Qk7oj9OUB7a_H-1VjSxaFd0ogdRqLTQC-fAK' alt=\"\"/>\r\n        </a>\r\n        <h2>{`${nombre} ${apellido}`}</h2> {/*dentro de las llaves podemos escribir javascript puro, es decir podemos hacer referncia a una variable creada o a un obejto o a una funcion , cualquier cosa que sea javacript puro, dentro de las llaves recibimos el valor de nombre que recibimos como props  */}\r\n        <h3>{edadUsuario(usuario.edad)?<h1>es mayor</h1>:<h3>es menor</h3>}</h3> {/*aqui dentro de las llaves llamamos la funcion, y utilizamos operadores ternarios para validar, ya que no podemos usar if observemos que en el opreador ternario podemos devolver un texto un elemento o un componente  */}\r\n        <h4>Desarrollador Web</h4>\r\n      </div>\r\n      <div className=\"desciption\">\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Provident nisi aut cum, perferendis id vel repudiandae nihil, deleniti omnis assumenda voluptate doloremque illum harum sed inventore sunt ipsa quasi. Consequuntur.</p>\r\n      </div>\r\n    </div>  \r\n )\r\n  \r\nCurso.propTypes ={ //decimos que tipo de dato va a recibir cada propiedad en este caso es string\r\n  apellido:PropTypes.string,\r\n  nombre:PropTypes.string\r\n}\r\nCurso.defaultProps={ //agregamos los valores por defecto que tendria el e;emento curso\r\n  apellido: 'no se encontro un apellido valido', //este es el valor por defecto para apellido\r\n  nombre: 'no se encontro un nombre valido' //este es el valor por defecto para nombre\r\n}\r\n\r\nexport default Curso; //exportamos el elemento que creamos",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":2,"column":8,"nodeType":"26","messageId":"27","endLine":2,"endColumn":12},{"ruleId":"28","severity":1,"message":"29","line":12,"column":9,"nodeType":"30","endLine":12,"endColumn":20},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]